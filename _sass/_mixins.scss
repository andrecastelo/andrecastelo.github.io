@mixin clearfix() {
    &:before,
    &:after {
        content: " "; // 1
        display: table; // 2
    }
    &:after {
        clear: both;
    }
}

@mixin linear-gradient($color-stops...) {
    background: nth(nth($color-stops, 1), 1);
    background: -webkit-linear-gradient(top, $color-stops);
    background: linear-gradient(top, $color-stops);
}

@mixin animated_border {
    transition: all .1s linear;
    border-bottom: 3px solid transparent;

    &:hover { border-color: $accent-color; }
}

@mixin position($position, $args) {
    @each $o in top right bottom left {
        $i: index($args, $o);
        @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
            #{$o}: nth($args, $i + 1);
        }
    }
    position: $position;
}

// Positioning helpers
@mixin absolute($args: '') { @include position(absolute, $args); }
@mixin fixed($args: '')    { @include position(fixed, $args); }
@mixin relative($args: '') { @include position(relative, $args); }

    /*
    Usage: 


    .sub-menu {
      @include absolute(top 100% left 0);
    }

    .sticky-bar {
      @include fixed(top 0 left 0);
    }
    */

@mixin prefix($property, $value, $vendors: webkit moz ms o, $default: true) {
    @if $vendors {
        @each $vendor in $vendors {
            #{"-" + $vendor + "-" + $property}: #{$value};
        }
    }
    @if $default {
        #{$property}: #{$value};
    }
}